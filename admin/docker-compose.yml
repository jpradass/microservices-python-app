version: '3.8'
services:
  
  backend:
    container_name: django-backend
    build: 
      context: .
      dockerfile: Dockerfile
    command: 'python manage.py runserver 0.0.0.0:8000'
    ports: 
      - 8000:8000
    volumes: 
      - .:/app
    depends_on: 
      - db
      - amqps
    networks: 
      - django-network

  db:
    image: mysql:5.7.22
    container_name: django-db
    restart: always
    environment: 
      MYSQL_DATABASE: admin
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - .dbdata:/var/lib/mysql
    ports:
      - 33066:3306
    networks: 
      - django-network

  queue:
    build: 
      context: .
      dockerfile: Dockerfile
    command: 'python consumer.py'
    depends_on: 
      - db
    networks: 
      - django-network

  amqps:
    container_name: amqp
    image: rabbitmq:3.8-rc-alpine
    restart: always
    environment: 
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: host
    networks: 
      - django-network
      - flask-network

networks: 
  django-network:
    name: django-network
  flask-network:
    name: flask-network